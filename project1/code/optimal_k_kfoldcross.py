from small_function_library import *
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt
import pandas as pd

""" PARAMETERS START"""
np.random.seed(sum([ord(c) for c in "corona"]))
minNrk = 2
maxNrk = 10
mindeg = 2
maxdeg = 8
datapoints=400
""" PARAMETERS END"""

print('Random seed: '+'sum([ord(c) for c in "corona"]'+',minNrk = {0}, maxNrk = {1}, mindeg = {2}, maxdeg = {3}, datapoints = {4}'.format(minNrk  , maxNrk  , mindeg  , maxdeg  , datapoints  ))


k = np.array([x for x in range(minNrk,maxNrk+1)])
x=np.random.uniform(0,1,datapoints)
y=np.random.uniform(0,1,datapoints)
z=FrankeFunction(x,y)+np.random.normal(0,0.3, datapoints)

MSE_test_kfold = np.zeros((len(k),maxdeg-mindeg+1))
j = 0
for deg in range(mindeg,maxdeg+1):
    X = DesignMatrix_deg2(x,y,deg)
    for i in range(len(k)):
       MSE_test_kfold[i,j] = (KCrossValMSE(X,z,k[i])+ KCrossValMSE(X,z,k[i]) +KCrossValMSE(X,z,k[i])+KCrossValMSE(X,z,k[i])+KCrossValMSE(X,z,k[i]))/5
    j +=1


j = 0
for s in range(maxNrk-minNrk+1):
    print('MSE_test_kfold, k = '+str(k[j]))
    plt.plot(list(range(mindeg,maxdeg+1)),MSE_test_kfold[s,:],label = 'k =' +str(k[j]))
    print(MSE_test_kfold)
    j+=1

plt.xlabel('Polynomial degree')
plt.ylabel('MSE')
plt.title('Mean Square Error of OLS using different numbers (k) of splits (#datapoints =' +str(datapoints)+r',$\sigma = 0.3$ )')
plt.legend()
plt.show()



"""
#CSV OUTPUT

if (csv_polydegree_comp):
    #OUTPUTS CSV FILE CONTAINING MSE COMPARISONS BETWEEN BOOTSTRAP, KFOLD-OLS AND KFOLD-RIDGE OVER A SPAN OF POLYNOMIAL DEGREES (SAMPLE TYPE 1)
    dict = {'polynomial degree': list(range(mindeg,maxdeg +1)),'MSE Bootstrap': MSE_test_boot, 'MSE Kfold-crossvalidation': MSE_test_kfold,'MSE Kfold-crossvalidation Ridge': MSE_test_kfoldRidge}
    df = pd.DataFrame(dict)
    df.to_csv('../csvData/KfoldRidge_polydegree_comparison_error.csv')

if (csv_Lambdaval_comp):
    #OUTPUTS CSV FILE CONTAINING MSE OF KFOLD-RIDGE OVER A SPAN OF LAMBDA VALUES (SAMPLE TYPE 2)
    dict = {'Lambda value': lambda_val,'MSE Kfold-crossvalidation Ridge': MSE_test_kfoldRidge_lambda}
    df = pd.DataFrame(dict)
    df.to_csv('../csvData/RidgeRegression_Lambda_error.csv')
    plt.plot(np.log10(lambda_val),MSE_test_kfoldRidge_lambda)
    plt.show()

"""







"""
RUN EXAMPLES:

###############################################################################################################################################
Random seed: sum([ord(c) for c in "corona"],minNrk = 2, maxNrk = 10, mindeg = 2, maxdeg = 8, datapoints = 400
MSE_test_kfold, k = 2
[[0.12676768 0.10903966 0.10861563 0.10669569 0.10492473 0.1262154
  0.1247367 ]
 [0.12553046 0.10809309 0.1057631  0.10468653 0.10118316 0.10612677
  0.11430792]
 [0.12604901 0.10711566 0.10663592 0.10536102 0.10000041 0.10725312
  0.10755885]
 [0.12610282 0.10807821 0.10490297 0.10118067 0.10234829 0.10389483
  0.10536055]
 [0.12640233 0.10749051 0.10427719 0.10161937 0.09828895 0.10409332
  0.10331739]
 [0.12511148 0.10823274 0.10380497 0.10033284 0.0990634  0.10400827
  0.10090311]
 [0.12575477 0.10815688 0.10451475 0.10061981 0.09888665 0.10205997
  0.10253878]
 [0.12583975 0.10757052 0.10421778 0.10042034 0.09836064 0.10147849
  0.1020775 ]
 [0.12526887 0.10716026 0.10346488 0.10132805 0.09843076 0.10245889
  0.10169215]]
MSE_test_kfold, k = 3
[[0.12676768 0.10903966 0.10861563 0.10669569 0.10492473 0.1262154
  0.1247367 ]
 [0.12553046 0.10809309 0.1057631  0.10468653 0.10118316 0.10612677
  0.11430792]
 [0.12604901 0.10711566 0.10663592 0.10536102 0.10000041 0.10725312
  0.10755885]
 [0.12610282 0.10807821 0.10490297 0.10118067 0.10234829 0.10389483
  0.10536055]
 [0.12640233 0.10749051 0.10427719 0.10161937 0.09828895 0.10409332
  0.10331739]
 [0.12511148 0.10823274 0.10380497 0.10033284 0.0990634  0.10400827
  0.10090311]
 [0.12575477 0.10815688 0.10451475 0.10061981 0.09888665 0.10205997
  0.10253878]
 [0.12583975 0.10757052 0.10421778 0.10042034 0.09836064 0.10147849
  0.1020775 ]
 [0.12526887 0.10716026 0.10346488 0.10132805 0.09843076 0.10245889
  0.10169215]]
MSE_test_kfold, k = 4
[[0.12676768 0.10903966 0.10861563 0.10669569 0.10492473 0.1262154
  0.1247367 ]
 [0.12553046 0.10809309 0.1057631  0.10468653 0.10118316 0.10612677
  0.11430792]
 [0.12604901 0.10711566 0.10663592 0.10536102 0.10000041 0.10725312
  0.10755885]
 [0.12610282 0.10807821 0.10490297 0.10118067 0.10234829 0.10389483
  0.10536055]
 [0.12640233 0.10749051 0.10427719 0.10161937 0.09828895 0.10409332
  0.10331739]
 [0.12511148 0.10823274 0.10380497 0.10033284 0.0990634  0.10400827
  0.10090311]
 [0.12575477 0.10815688 0.10451475 0.10061981 0.09888665 0.10205997
  0.10253878]
 [0.12583975 0.10757052 0.10421778 0.10042034 0.09836064 0.10147849
  0.1020775 ]
 [0.12526887 0.10716026 0.10346488 0.10132805 0.09843076 0.10245889
  0.10169215]]
MSE_test_kfold, k = 5
[[0.12676768 0.10903966 0.10861563 0.10669569 0.10492473 0.1262154
  0.1247367 ]
 [0.12553046 0.10809309 0.1057631  0.10468653 0.10118316 0.10612677
  0.11430792]
 [0.12604901 0.10711566 0.10663592 0.10536102 0.10000041 0.10725312
  0.10755885]
 [0.12610282 0.10807821 0.10490297 0.10118067 0.10234829 0.10389483
  0.10536055]
 [0.12640233 0.10749051 0.10427719 0.10161937 0.09828895 0.10409332
  0.10331739]
 [0.12511148 0.10823274 0.10380497 0.10033284 0.0990634  0.10400827
  0.10090311]
 [0.12575477 0.10815688 0.10451475 0.10061981 0.09888665 0.10205997
  0.10253878]
 [0.12583975 0.10757052 0.10421778 0.10042034 0.09836064 0.10147849
  0.1020775 ]
 [0.12526887 0.10716026 0.10346488 0.10132805 0.09843076 0.10245889
  0.10169215]]
MSE_test_kfold, k = 6
[[0.12676768 0.10903966 0.10861563 0.10669569 0.10492473 0.1262154
  0.1247367 ]
 [0.12553046 0.10809309 0.1057631  0.10468653 0.10118316 0.10612677
  0.11430792]
 [0.12604901 0.10711566 0.10663592 0.10536102 0.10000041 0.10725312
  0.10755885]
 [0.12610282 0.10807821 0.10490297 0.10118067 0.10234829 0.10389483
  0.10536055]
 [0.12640233 0.10749051 0.10427719 0.10161937 0.09828895 0.10409332
  0.10331739]
 [0.12511148 0.10823274 0.10380497 0.10033284 0.0990634  0.10400827
  0.10090311]
 [0.12575477 0.10815688 0.10451475 0.10061981 0.09888665 0.10205997
  0.10253878]
 [0.12583975 0.10757052 0.10421778 0.10042034 0.09836064 0.10147849
  0.1020775 ]
 [0.12526887 0.10716026 0.10346488 0.10132805 0.09843076 0.10245889
  0.10169215]]
MSE_test_kfold, k = 7
[[0.12676768 0.10903966 0.10861563 0.10669569 0.10492473 0.1262154
  0.1247367 ]
 [0.12553046 0.10809309 0.1057631  0.10468653 0.10118316 0.10612677
  0.11430792]
 [0.12604901 0.10711566 0.10663592 0.10536102 0.10000041 0.10725312
  0.10755885]
 [0.12610282 0.10807821 0.10490297 0.10118067 0.10234829 0.10389483
  0.10536055]
 [0.12640233 0.10749051 0.10427719 0.10161937 0.09828895 0.10409332
  0.10331739]
 [0.12511148 0.10823274 0.10380497 0.10033284 0.0990634  0.10400827
  0.10090311]
 [0.12575477 0.10815688 0.10451475 0.10061981 0.09888665 0.10205997
  0.10253878]
 [0.12583975 0.10757052 0.10421778 0.10042034 0.09836064 0.10147849
  0.1020775 ]
 [0.12526887 0.10716026 0.10346488 0.10132805 0.09843076 0.10245889
  0.10169215]]
MSE_test_kfold, k = 8
[[0.12676768 0.10903966 0.10861563 0.10669569 0.10492473 0.1262154
  0.1247367 ]
 [0.12553046 0.10809309 0.1057631  0.10468653 0.10118316 0.10612677
  0.11430792]
 [0.12604901 0.10711566 0.10663592 0.10536102 0.10000041 0.10725312
  0.10755885]
 [0.12610282 0.10807821 0.10490297 0.10118067 0.10234829 0.10389483
  0.10536055]
 [0.12640233 0.10749051 0.10427719 0.10161937 0.09828895 0.10409332
  0.10331739]
 [0.12511148 0.10823274 0.10380497 0.10033284 0.0990634  0.10400827
  0.10090311]
 [0.12575477 0.10815688 0.10451475 0.10061981 0.09888665 0.10205997
  0.10253878]
 [0.12583975 0.10757052 0.10421778 0.10042034 0.09836064 0.10147849
  0.1020775 ]
 [0.12526887 0.10716026 0.10346488 0.10132805 0.09843076 0.10245889
  0.10169215]]
MSE_test_kfold, k = 9
[[0.12676768 0.10903966 0.10861563 0.10669569 0.10492473 0.1262154
  0.1247367 ]
 [0.12553046 0.10809309 0.1057631  0.10468653 0.10118316 0.10612677
  0.11430792]
 [0.12604901 0.10711566 0.10663592 0.10536102 0.10000041 0.10725312
  0.10755885]
 [0.12610282 0.10807821 0.10490297 0.10118067 0.10234829 0.10389483
  0.10536055]
 [0.12640233 0.10749051 0.10427719 0.10161937 0.09828895 0.10409332
  0.10331739]
 [0.12511148 0.10823274 0.10380497 0.10033284 0.0990634  0.10400827
  0.10090311]
 [0.12575477 0.10815688 0.10451475 0.10061981 0.09888665 0.10205997
  0.10253878]
 [0.12583975 0.10757052 0.10421778 0.10042034 0.09836064 0.10147849
  0.1020775 ]
 [0.12526887 0.10716026 0.10346488 0.10132805 0.09843076 0.10245889
  0.10169215]]
MSE_test_kfold, k = 10
[[0.12676768 0.10903966 0.10861563 0.10669569 0.10492473 0.1262154
  0.1247367 ]
 [0.12553046 0.10809309 0.1057631  0.10468653 0.10118316 0.10612677
  0.11430792]
 [0.12604901 0.10711566 0.10663592 0.10536102 0.10000041 0.10725312
  0.10755885]
 [0.12610282 0.10807821 0.10490297 0.10118067 0.10234829 0.10389483
  0.10536055]
 [0.12640233 0.10749051 0.10427719 0.10161937 0.09828895 0.10409332
  0.10331739]
 [0.12511148 0.10823274 0.10380497 0.10033284 0.0990634  0.10400827
  0.10090311]
 [0.12575477 0.10815688 0.10451475 0.10061981 0.09888665 0.10205997
  0.10253878]
 [0.12583975 0.10757052 0.10421778 0.10042034 0.09836064 0.10147849
  0.1020775 ]
 [0.12526887 0.10716026 0.10346488 0.10132805 0.09843076 0.10245889
  0.10169215]]
###############################################################################################################################################

"""